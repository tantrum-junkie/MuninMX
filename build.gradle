/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'unrza249' at '20.11.17 10:00' with Gradle 3.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

version = '1.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7
//mainClassName = 'com.clavain.muninmxcd'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
//    flatDir {
//        dirs 'lib'
//    }

}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.21'

    compile group: 'commons-codec', name: 'commons-codec', version: '1.6'
    compile group: 'org.apache.commons', name: 'commons-email', version: '1.3.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.3.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.3'
    compile group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.3.3'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.3.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.3'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.3.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.3'
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.1'

    compile group: 'org.eclipse.jetty', name: 'jetty-annotations', version: '9.1.2.v20140210'
    compile group: 'org.eclipse.jetty', name: 'jetty-http', version: '9.1.2.v20140210'
    compile group: 'org.eclipse.jetty', name: 'jetty-io', version: '9.1.2.v20140210'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.1.2.v20140210'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.1.2.v20140210'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '9.1.2.v20140210'
    compile group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.1.2.v20140210'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'


    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.6'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.6'


    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '2.10.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.29'
    compile group: 'com.github.sps.pushover.net', name: 'pushover-client', version: '1.0.0'

    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'
    compile group: 'org.quartz-scheduler', name: 'quartz-jobs', version: '2.2.1'

    compile group: 'com.twilio.sdk', name: 'twilio-java-sdk', version: '3.5.0'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile 'junit:junit:4.12'
}

sourceSets {
    main {
        java {
            srcDirs =  ['src']
//            include "**/*.*"
            output.classesDir = "build/classes"
        }
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'MuninMX',
                'Implementation-Version': version,
                'Main-Class': 'com.clavain.muninmxcd',
        )
    }
}

//task compile (dependsOn: compileJava){
//
//}

task fatJar(type: Jar) {
    manifest {
        attributes(
                'Implementation-Title': 'MuninMX',
                'Implementation-Version': version,
                'Main-Class': 'com.clavain.muninmxcd',
        )
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}